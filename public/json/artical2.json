{"articals":[{"title":"nn","img":"","href":"ai/ai-0/0","des":"# Pytouch.nn 相关函数对照\r\n\r\n## nn.Embedding\r\n【功能】<br/>\r\n产生一组存储固定大小的词典的嵌入向量的查找表。\r\n【初始化】\r\n```py\r\nembed = torch.nn.Embedding(num_embeddings,embedding_dim)\r\n```\r\n> num_embeddings (python:int) – 词典的大小尺寸\r\n> embedding_dim (python:int) – 嵌入向量的维度，即用多少维来表示一个符号。\r\n\r\n有时在初始化时会被赋值会伴随着初始化过程。\r\n```py\r\nself.init_proposal_boxes = nn.Embedding(300, 4)\r\nnn.init.constant_(self.init_proposal_boxes.weight[:, :2], 0.5)\r\nnn.init.constant_(self.init_proposal_boxes.weight[:, 2:], 1.0)\r\n```\r\n\r\n【使用】<br />\r\n使用过程中，将`embed`直接当作向量来是使用","commend":0,"watch":0,"evaluate":0,"date":"2022-02-26T06:03:04.999Z"},{"title":"ISTR","img":"../../../img/artical/2022-02-26-14-06-17.png","href":"ai/ai-2/2","des":"# ISTR\r\n\r\n## 信息 \r\n文章链接：[https://arxiv.org/abs/2105.00637](https://arxiv.org/abs/2105.00637)\r\n\r\n发表时间：2021-05\r\n\r\n![](../../../img/artical/2022-02-26-14-06-17.png)\r\n\r\n## 创新点简介\r\n本文设计了一款TransFormer结构，类比了Spacer RCNN的思想，使用固定数目的RoI对目标进行界框检测和实例分割。\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-02-27T07:07:42.891Z"},{"title":" SSIS Metric Learning","img":"../../../img/artical/2022-02-25-15-11-58.png","href":"ai/ai-1/1","des":"# 【实例分割】Semantic Instance Segmentation via Deep Metric Learning\r\n\r\n\r\n## 信息\r\n文章链接：[https://arxiv.org/abs/1703.10277](https://arxiv.org/abs/1703.10277)\r\n\r\n## 创新点简介\r\n本文使用先计算出两个像素属于同一个目标的可能性后再聚类的方式，完成实例分割任务。`【论文原句】first computing how likely two pixels are to belong to the same object, and then by grouping similar pixels together`。具体来说论文使用全卷积的模型计算出相似度矩阵，然后通过“种子点”聚类相似像素。这些 “种子点” 是由一个全卷积网络训练出来的。\r\n\r\n\r\n## 详细内容\r\n### 模型结构\r\n![](../../../img/artical/2022-02-25-15-11-58.png)\r\n上文所说的低层信息，就是这里从骨干和FPN输出中提取出来的`Bas","commend":0,"watch":0,"evaluate":0,"date":"2022-03-05T10:06:10.261Z"},{"title":"镜像使用","img":"","href":"docker/docker-0/2","des":"# docker 镜像使用 \r\n\r\n## docker run 指令\r\n<pre><embed type=\"image/svg+xml\" src=\"../../../img/artical/docker服务架构.svg\" /></pre>\r\n\r\n1. DockerServer会一直在后台运行，等待着客户端的命令\r\n2. 通过守护进程\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-03-08T06:20:31.889Z"},{"title":"安装","img":"","href":"docker/docker-0/0","des":"# Docker安装\r\n\r\n\r\n> 参考地址 [https://docs.docker.com/engine/install/centos/](https://docs.docker.com/engine/install/centos/)\r\n\r\n<br>\r\n\r\n## docker安装\r\n\r\n```sh\r\n# 删除已安装的 docker\r\nsudo yum remove docker \\\r\n                docker-client \\\r\n                docker-client-latest \\\r\n                docker-common \\\r\n                docker-latest \\\r\n                docker-latest-logrotate \\\r\n                docker-logrotate \\\r\n                docker-engine\r\n\r\n\r\n# 安装yum-utils包, 设置docker 源\r\nsudo yum install -y yum","commend":0,"watch":0,"evaluate":0,"date":"2022-03-08T06:20:36.314Z"},{"title":"状态查询","img":"","href":"docker/docker-0/1","des":"# 【docker】查询命令\r\n\r\n## 常用命令\r\n|命令功能|命令|\r\n| --- | --- |\r\n| docker 配置信息 | docker info |\r\n| docker 版本 | docker version |\r\n\r\n\r\n## 常用位置\r\n【docker 配置文件】`/etc/docker/daemon.json`\r\n","commend":0,"watch":0,"evaluate":0,"date":"2022-03-08T06:20:45.061Z"},{"title":"面试","img":"","href":"docker/docker-0/3","des":"# 面试知识点\r\n\r\n## 为什么docker 运行的速度会快\r\n1. \r\n1. docker 与虚拟机相比有更少的抽象层。\r\n2. 虚拟机启动需要重新加载操作系统，而docker可以直接使用宿主机的操作系统。","commend":0,"watch":0,"evaluate":0,"date":"2022-03-08T06:20:49.377Z"},{"title":"FICS","img":"","href":"ai/ai-1/3","des":"","commend":0,"watch":0,"evaluate":0,"date":"2022-03-08T10:59:51.021Z"},{"title":"InstanceFCN","img":"../../../img/artical/2022-03-07-22-06-33.png","href":"ai/ai-1/2","des":"# InstanceFCN\r\n\r\n## 信息\r\n\r\n文章标题：Instance-sensitive Fully Convolutional Networks\r\n文章链接：[https://link.springer.com/chapter/10.1007/978-3-319-46466-4_32](https://link.springer.com/chapter/10.1007/978-3-319-46466-4_32)\r\n\r\n## 背景\r\n对于以往的图像分割模型，由于卷积具有<font color=\"red\">位置的不敏感性</font>（对于相同的事物，在图像中处于不同的位置，卷积核的输出相同），导致了当两个相似的事物靠近时很难通过卷积来加以区分。\r\n\r\n## 创新点简介\r\n本文使用全卷积神经网络构建端到端的实例分割模型，它只分割每个实例，没有对实例进行分类。基于语义分割的模型，只有一种语义信息，如果两个实例距离贴就无法区分个体。这是由于卷积具有位置不变性造成的，作者使用滑动窗口，将窗口划分为9个小格（编号为1-9），每个格子代表了像素处于不同的位置，窗口滑动时，像素会被分到不同","commend":0,"watch":0,"evaluate":0,"date":"2022-03-08T14:32:27.154Z"}]}